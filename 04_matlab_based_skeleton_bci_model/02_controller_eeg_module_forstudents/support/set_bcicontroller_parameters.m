function BCIpar = set_bcicontroller_parameters

%% Settings for:

%% i) filter parameters


%% ii) moving average parameters


%% ii) no of CSP components


%% iii) CSP filter matrix



% number of trials
BCIpar.nTrials = 2; % total number of trials (half of them will be class 1, half will be class 2)

% class info
class1_label = 'hand';
class2_label = 'foot';

% create class cues
cue_hand = 1 * ones(ceil(BCIpar.nTrials/2), 1);
cue_foot = 2 * ones(ceil(BCIpar.nTrials/2), 1);
class_list = cat(1, cue_hand, cue_foot);
class_list = class_list(randperm(length(class_list)));

% "store" everything in the BCIpar structure
BCIpar.cues.class_list = class_list;
BCIpar.cues.class_labels{1} = class1_label;
BCIpar.cues.class_labels{2} = class2_label;

%% iii) settings for the paradigm figure

% size, color, and position of elements in the figure
BCIpar.sfDisplay.crossSize = 0.3;
BCIpar.sfDisplay.crossColor = 'k';
BCIpar.sfDisplay.lineWidth = 5;

% If present display the window on the second screen
monitor_positions = get(groot, 'MonitorPositions');
if size(monitor_positions, 1) == 2
    BCIpar.sfDisplay.screensize = monitor_positions(2,:);
else
    BCIpar.sfDisplay.screensize = monitor_positions(1,:);
end

BCIpar.sfDisplay.hfig = figure('Color', [0.5 0.5 0.5],...
    'position', BCIpar.sfDisplay.screensize,...
    'MenuBar', 'none',...
    'ToolBar', 'none',...
    'Visible', 'off');

BCIpar.sfDisplay.hMainAxes = axes('Color', 'none',...
    'xlim', [-1.1 1.1],...
    'ylim', [-1.1 1.1],...
    'Visible', 'off',...
    'Position', [0, 0, 1, 1]);

BCIpar.sfDisplay.hCross_horizontal = line(BCIpar.sfDisplay.crossSize*[-3/4 3/4], [0, 0],...
    'Color', BCIpar.sfDisplay.crossColor,...
    'LineWidth', BCIpar.sfDisplay.lineWidth,...
    'Visible', 'off');

BCIpar.sfDisplay.hCross_vertical = line([0, 0], BCIpar.sfDisplay.crossSize*[-1 1],...
    'Color', BCIpar.sfDisplay.crossColor,...
    'LineWidth', BCIpar.sfDisplay.lineWidth,...
    'Visible', 'off');

% Make sure we are in the directory of the running function
runningdir = fileparts(mfilename('fullpath'));
cd(runningdir)

% Include pictures:
BCIpar.sfDisplay.hand_start = imread(['pics/hand_start', '.png']);
BCIpar.sfDisplay.haxes_hand_start = axes(...
    'Color', 'none',...
    'xlim', [-1/2 1/2],...
    'ylim', [-1/2 1/2],...
    'Visible', 'off',...
    'Position', [0, 0, 1, 1.5],...
    'YDir', 'reverse');
BCIpar.sfDisplay.himage_hand_start = image('CData', BCIpar.sfDisplay.hand_start,...
    'Visible','off',...
    'XData',[-0.05 0.05],...
    'YData',[-0.05 0.05]);

BCIpar.sfDisplay.hand_execute = imread(['pics/hand_execute', '.png']);
BCIpar.sfDisplay.haxes_hand_execute = axes(...
    'Color', 'none',...
    'xlim', [-1/2 1/2],...
    'ylim', [-1/2 1/2],...
    'Visible', 'off',...
    'Position', [0, 0, 1, 1.5],...
    'YDir', 'reverse');
BCIpar.sfDisplay.himage_hand_execute = image('CData', BCIpar.sfDisplay.hand_execute,...
    'Visible','off',...
    'XData',[-0.05 0.05],...
    'YData',[-0.05 0.05]);

BCIpar.sfDisplay.foot_start = imread(['pics/foot_start', '.png']);
BCIpar.sfDisplay.haxes_foot_start = axes(...
    'Color', 'none',...
    'xlim', [-1/2 1/2],...
    'ylim', [-1/2 1/2],...
    'Visible', 'off',...
    'Position', [0, 0, 1, 1.5],...
    'YDir', 'reverse');
BCIpar.sfDisplay.himage_foot_start = image('CData', BCIpar.sfDisplay.foot_start ,...
    'Visible','off',...
    'XData',[-0.05 0.05],...
    'YData',[-0.05 0.05]);

BCIpar.sfDisplay.foot_execute = imread(['pics/foot_execute', '.png']);
BCIpar.sfDisplay.haxes_foot_execute = axes(...
    'Color', 'none',...
    'xlim', [-1/2 1/2],...
    'ylim', [-1/2 1/2],...
    'Visible', 'off',...
    'Position', [0, 0, 1, 1.5],...
    'YDir', 'reverse');
BCIpar.sfDisplay.himage_foot_execute = image('CData', BCIpar.sfDisplay.foot_execute ,...
    'Visible','off',...
    'XData',[-0.05 0.05],...
    'YData',[-0.05 0.05]);

end